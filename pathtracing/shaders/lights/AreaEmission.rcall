#version 460 core
#extension GL_EXT_ray_tracing : enable
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_nonuniform_qualifier : enable
#extension GL_EXT_scalar_block_layout : enable
#include "../raycommon.glsl"
#include "../wavefront.glsl"

layout(location = 0) callableDataInEXT emissionCall mc;

layout(binding = 1, set = 1, scalar) buffer MatColorBufferObject
{
  WaveFrontMaterial m[];
}
materials[];

layout(binding = 2, set = 1, scalar) buffer ScnDesc
{
  sceneDesc i[];
}
scnDesc;

layout(binding = 3, set = 1) uniform sampler2D textureSamplers[];
layout(binding = 4, set = 1) buffer MatIndexColorBuffer
{
  int i[];
}
matIndex[];

layout(push_constant) uniform Constants
{
  vec4  clearColor;
  vec3  lightPosition;
  float lightIntensity;
  vec3  lightDirection;
  float lightSpotCutoff;
  float lightSpotOuterCutoff;
  int   lightType;
};

void main()
{
    vec3 n = cross(mc.li.v1.xyz - mc.li.v0.xyz, mc.li.v2.xyz - mc.li.v0.xyz);
    float len = length(n);
    float area = len * 0.5;
    float inv_area = 1.0 / area;
    n *= inv_area * 0.5;
    float cos_v = dot(mc.dir, n) / M_PI;
    if(cos_v > 0){
        mc.intensity = mc.li.color.xyz;
        mc.pdf_area = inv_area;
        mc.pdf_dir= cos_v;
    } else {
        mc.intensity =vec3(0);
        mc.pdf_area = 1;
        mc.pdf_dir= 1;
    }
    
        
    
}